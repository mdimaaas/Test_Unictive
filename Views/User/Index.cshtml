@model IEnumerable<UserRead>

<h2>User List</h2>

<button class="btn btn-primary" data-toggle="modal" data-target="#userModal" onclick="openCreateModal()">Add User</button>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Hobbies</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.fName</td>
                <td>@string.Join(", ", user.fHobbies)</td>
                <td>
                    <button class="btn btn-primary" data-toggle="modal" data-target="#userModal" onclick="openEditModal(@user.fID)">Edit User</button>
                    <button class="btn btn-danger" onclick="deleteUser(@user.fID)">Delete User</button>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="modal" id="userModal" tabindex="-1" role="dialog" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">Create User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="userForm">
                    <input type="hidden" class="form-control" id="userID">
                    <div class="form-group">
                        <label for="userName">Name</label>
                        <input type="text" class="form-control" id="userName" required>
                    </div>
                    <div class="form-group">
                        <label for="userHobbies">Hobbies</label>
                        <select id="userHobbies" class="form-control" multiple required></select>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- jQuery CDN -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Bootstrap CDN -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>
    var type = "create";
    $(document).ready(function() {
        // Fungsi untuk membuka modal untuk Create User
        window.openCreateModal = function() {
            type = "create";
            $('#userModalLabel').text('Create User');
            $('#userForm')[0].reset();
            $('#userHobbies').val([]);
            loadHobbies();
        }

        // Fungsi untuk memuat daftar hobbies dari database
        function loadHobbies() {
            $.ajax({
                url: '/User/GetHobbies',  // URL untuk mendapatkan data hobbies
                type: 'GET',
                success: function(data) {
                    $('#userHobbies').empty();
                    data.forEach(function(hobby) {
                        $('#userHobbies').append(new Option(hobby.fHobby, hobby.fID));
                    });
                }
            });
        }

        // Fungsi untuk menangani Create User
        $('#userForm').on('submit', function(e) {
            e.preventDefault();
            if(type == "create"){
                var hobbies = $('#userHobbies').val();
                var name = $('#userName').val();

                $.ajax({
                    url: '/User/CreateUser',
                    type: 'POST',
                    data: {
                        fName: name,
                        fHobbyID: hobbies
                    },
                    success: function() {
                        $('#userModal').modal('hide');
                        location.reload();
                    },
                    error: function() {
                        alert('Error creating user');
                    }
                });
            }
            else{
                var id = $('#userID').val();
                var hobbies = $('#userHobbies').val();
                var name = $('#userName').val();

                 $.ajax({
                    url: '/User/UpdateUser/' + id,
                    type: 'PUT',
                    data: {
                        fName: name,
                        fHobbyID: hobbies
                    },
                    success: function() {
                        $('#userModal').modal('hide');
                        location.reload();
                    },
                    error: function() {
                        alert('Error creating user');
                    }
                });
            }
            
        });

        // Fungsi untuk Edit User
        window.openEditModal = function(userId) {
            type = "edit";
            loadHobbies();
            $('#userModalLabel').text('Edit User');
            $.ajax({
                url: '/User/GetUser/' + userId,
                type: 'GET',
                success: function(data) {
                    console.log(data);
                    $('#userID').val(data[0].fID);
                    $('#userName').val(data[0].fName);
                    $('#userHobbies').val(data[0].fHobbies);
                    $('#userModal').modal('show');
                }
            });
        }

        // Fungsi untuk Delete User
        function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user?')) {
                $.ajax({
                    url: '/User/DeleteUser/' + userId,
                    type: 'DELETE',
                    success: function() {
                        location.reload();  // Reload halaman setelah delete
                    },
                    error: function() {
                        alert('Error deleting user');
                    }
                });
            }
        }
    });
</script>
